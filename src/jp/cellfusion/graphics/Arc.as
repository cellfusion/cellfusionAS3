package jp.cellfusion.graphics{	import flash.display.Graphics;	public class Arc	{		public static function draw(t:Graphics, sx:Number, sy:Number, radius:Number, arc:Number, startAngle:Number = 0):void		{			t.moveTo(sx, sy);			var segAngle:Number;			var angle:Number;			var angleMid:Number;			var numOfSegs:Number;			var ax:Number;			var ay:Number;			var bx:Number;			var by:Number;			var cx:Number;			var cy:Number;			if (Math.abs(arc) > 360) {				arc = 360;			}			numOfSegs = Math.ceil(Math.abs(arc) / 45);			segAngle = arc / numOfSegs;			segAngle = (segAngle / 180) * Math.PI;			angle = (startAngle / 180) * Math.PI;			ax = sx - Math.cos(angle) * radius;			ay = sy - Math.sin(angle) * radius;			for (var i:int = 0; i < numOfSegs; i++) {				angle += segAngle;				angleMid = angle - (segAngle / 2);				bx = ax + Math.cos(angle) * radius;				by = ay + Math.sin(angle) * radius;				cx = ax + Math.cos(angleMid) * (radius / Math.cos(segAngle / 2));				cy = ay + Math.sin(angleMid) * (radius / Math.cos(segAngle / 2));				t.curveTo(cx, cy, bx, by);			}		}	}}