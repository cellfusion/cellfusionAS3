package jp.cellfusion.ui.dialogbox {	import jp.cellfusion.ui.AbstractUI;	import jp.cellfusion.ui.events.DialogboxEvent;	import flash.display.DisplayObjectContainer;	import flash.display.Sprite;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;	/**	 * @author Mk-10:cellfusion	 */	public class Dialogbox extends EventDispatcher implements IDiarogbox	{		private var _view:DisplayObjectContainer;		private var _background:Sprite;		private var _container:Sprite;		private var _closeButton:Sprite;		public function get closeButton():Sprite		{			return _closeButton;		}		public function set closeButton(value:Sprite):void		{			value.buttonMode = true;			value.addEventListener(MouseEvent.CLICK, closeClickHandler);			_closeButton = value;		}		private var _yesButton:Sprite;		public function get yesButton():Sprite		{			return _yesButton;		}		public function set yesButton(value:Sprite):void		{			value.buttonMode = true;			value.addEventListener(MouseEvent.CLICK, yesClickHandler);			_yesButton = value;		}		private var _noButton:Sprite;		public function get noButton():Sprite		{			return _noButton;		}		public function set noButton(value:Sprite):void		{			value.buttonMode = true;			value.addEventListener(MouseEvent.CLICK, noClickHandler);			_noButton = value;		}		public function Dialogbox(view:DisplayObjectContainer)		{			_view = view;			_background = new Sprite();			_container = new Sprite();						try {				closeButton = _view["closeButton"];			} catch(error:Error) {			}						try {				yesButton = _view["yesButton"];			} catch (error:Error) {			}						try {				noButton = _view["noButton"];			} catch (error:Error) {			}						_view.x = (AbstractUI._stage.stageWidth - _view.width) * 0.5;			_view.y = (AbstractUI._stage.stageHeight - _view.height) * 0.5;						_background.graphics.beginFill(0x000000, 0.8);			_background.graphics.drawRect(0, 0, AbstractUI._stage.stageWidth, AbstractUI._stage.stageHeight);			_background.graphics.endFill();			//			_background.mouseEnabled = true;			_container.addChild(_background);			_container.addChild(_view);		}		public function show():void		{			AbstractUI._stage.addChild(_container);		}		public function hide():void		{			AbstractUI._stage.removeChild(_container);		}		private function closeClickHandler(event:MouseEvent):void		{			dispatchEvent(new DialogboxEvent(DialogboxEvent.CLOSE_BUTTON_CLICK));		}		private function yesClickHandler(event:MouseEvent):void		{			dispatchEvent(new DialogboxEvent(DialogboxEvent.YES_BUTTON_CLICK));		}		private function noClickHandler(event:MouseEvent):void		{			dispatchEvent(new DialogboxEvent(DialogboxEvent.NO_BUTTON_CLICK));		}	}}