package jp.cellfusion.ui.scrollbar {	import jp.cellfusion.ui.AbstractUI;	import flash.display.InteractiveObject;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;	/**	 * RepeatedClickDispatcher を参考にしてます	 * http://www.libspark.org/wiki/Utils/RepeatedClickDispatcher	 * @author Mk-10:cellfusion	 */	public class ScrollRepeat implements IScrollRepeat 	{		private var _target:InteractiveObject;		private var _delay:uint;		private var _interval:uint;		private var _counter:Number;		public function repeatedClick(target:InteractiveObject, delay:uint = 0, interval:uint = 0):void		{			/**			 * 既に登録されている場合			 */			if (_target != null) {							}						_target = target;			_delay = delay;			_interval = interval == 0 ? 1 : interval;						_counter = 0;						dispatchClickEvent();						AbstractUI._stage.addEventListener(Event.ENTER_FRAME, enterframeHandler);			_target.addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);			_target.addEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler);		}		private function enterframeHandler(event:Event):void		{			if (++_counter > _delay) {				if ((_counter - _delay) % _interval == 0) {					dispatchClickEvent();				}			}		}		private function dispatchClickEvent():void		{			_target.dispatchEvent(new MouseEvent(MouseEvent.CLICK));		}		private function mouseUpHandler(event:MouseEvent):void		{			unregisterListener();		}		private function mouseOutHandler(event:MouseEvent):void		{			unregisterListener();		}		private function unregisterListener():void		{			AbstractUI._stage.removeEventListener(Event.ENTER_FRAME, enterframeHandler);			_target.removeEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);			_target.removeEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler);		}	}}