package jp.cellfusion.ui.list {		import jp.cellfusion.ui.scrollbar.IScrollbar;	import flash.display.DisplayObjectContainer;	import flash.events.EventDispatcher;	/**	 * @author Mk-10:cellfusion	 */	public class SimpleList extends EventDispatcher implements IList 	{		private var _view:DisplayObjectContainer;		private var _scrollbar:IScrollbar;		private var _children:Array;		private var _selected:uint;		private var _allowMultipleSelection:Boolean;		public function SimpleList(view:DisplayObjectContainer, scrollbar:IScrollbar)		{			_view = view;			_scrollbar = scrollbar;						_children = [];		}		public function scrollToIndex(index:int):void		{		}		public function scrollToSelected():void		{		}		public function getItemAt(index:uint):*		{			return _children[index];		}		public function isItemSelected(item:*):Boolean		{			var idx:int = _children.indexOf(item);			return idx == _selected;		}		public function addItem(item:*):*		{			if (_children.indexOf(item) != -1) {				throw new ArgumentError("既に追加されています");			}						_children.push(item);			return item;		}		public function addItemAt(item:*, index:uint):*		{			if (_children.indexOf(item) != -1) {				throw new ArgumentError("既に追加されています");			}						_children.splice(index, 0, item);			return item;		}		public function removeItem(item:*):*		{			var idx:int = _children.indexOf(item);			if (idx == -1) {				throw new ArgumentError("既に削除されています");			}						return removeItemAt(idx);		}		public function removeItemAt(index:uint):*		{			if (_children.length >= index) {				throw new ArgumentError("");			}						return _children.splice(index, 1);		}		public function removeAll():void		{			_children = [];		}		public function replaceItemAt(item:*, index:uint):*		{			return null;		}		public function get length():uint		{			return 0;		}		public function get allowMultipleSelection():Boolean		{			return _allowMultipleSelection;		}		public function set allowMultipleSelection(value:Boolean):void		{			_allowMultipleSelection = value;		}		public function get rowCount():uint		{			return 0;		}		public function set rowCount(value:uint):void		{		}		public function get selectable():Boolean		{			return false;		}		public function set selectable(value:Boolean):void		{		}		public function get selectedIndex():int		{			return 0;		}		public function set selectedIndex(value:int):void		{		}		public function get selectedIndices():Array		{			return null;		}		public function set selectedIndices(value:Array):void		{		}		public function get selectedItem():*		{			return null;		}		public function set selectedItem(value:*):void		{		}		public function get selectedItems():Array		{			return null;		}		public function set selectedItems(value:Array):void		{		}	}}